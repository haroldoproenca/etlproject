{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Doc 'Como estruturar um projeto do Zero'","text":"<p>Este \u00e9 um projeto exemplo dedicado a demonstrar pr\u00e1ticas de refatora\u00e7\u00e3o. Neste espa\u00e7o, voc\u00ea encontrar\u00e1 uma descri\u00e7\u00e3o aprofundada da ETL, instru\u00e7\u00f5es para instala\u00e7\u00e3o, respostas a perguntas frequentes e mais. Seja voc\u00ea um colaborador ou simplesmente algu\u00e9m com interesse no projeto, esperamos que esta documenta\u00e7\u00e3o lhe seja \u00fatil.</p> <p>Al\u00e9m disso, esta documenta\u00e7\u00e3o pode ser integrada ao Confluence ou a uma intranet interna, facilitando o acesso e colabora\u00e7\u00e3o de todos os membros da equipe.</p>"},{"location":"#secoes","title":"Se\u00e7\u00f5es","text":"<ul> <li>Doc 'Como estruturar um projeto do Zero'</li> <li>Se\u00e7\u00f5es</li> <li>Introdu\u00e7\u00e3o</li> <li>Guia de Instala\u00e7\u00e3o</li> <li>FAQ</li> <li>Contato</li> </ul>"},{"location":"#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O objetivo deste projeto \u00e9 demonstrar como t\u00e9cnicas de refatora\u00e7\u00e3o podem ser aplicadas para melhorar a qualidade do c\u00f3digo, otimizar a performance e tornar o software mais manuten\u00edvel. A refatora\u00e7\u00e3o \u00e9 essencial para manter o c\u00f3digo limpo e compreens\u00edvel, permitindo que equipes mantenham uma alta velocidade de desenvolvimento ao longo do tempo.</p>"},{"location":"#guia-de-instalacao","title":"Guia de Instala\u00e7\u00e3o","text":"<p>Aqui, voc\u00ea encontrar\u00e1 instru\u00e7\u00f5es detalhadas sobre como instalar e configurar o projeto em seu ambiente local. Seguir as instru\u00e7\u00f5es corretamente garante que voc\u00ea tenha uma experi\u00eancia suave ao trabalhar no projeto.</p>"},{"location":"#faq","title":"FAQ","text":"<p>Esta se\u00e7\u00e3o fornece respostas para perguntas frequentes. Se voc\u00ea tiver alguma d\u00favida que n\u00e3o est\u00e1 coberta aqui, sinta-se \u00e0 vontade para entrar em contato.</p>"},{"location":"#contato","title":"Contato","text":"<p>Para quaisquer d\u00favidas, feedbacks ou suporte relacionado ao projeto, voc\u00ea pode entrar em contato diretamente atrav\u00e9s do e-mail: lvgalvaofilho@gmail.com. Estou sempre disposto a ajudar!</p>"},{"location":"linkedin/","title":"Linkedin","text":"<p>Haroldo Proen\u00e7a's Prrofile: https://www.linkedin.com/in/haroldoproenca/</p> <p>Devops4Fun Brazil Profile: https://www.linkedin.com/company/97855675/admin/inbox/</p>"},{"location":"getting-started/extract/","title":"Extract","text":"<p>Abaixo, voc\u00ea encontrar\u00e1 detalhes sobre as fun\u00e7\u00f5es e m\u00f3dulos do nosso projeto.</p>"},{"location":"getting-started/extract/#modulo-consolidador","title":"M\u00f3dulo <code>consolidador</code>","text":""},{"location":"getting-started/extract/#extract_1","title":"<code>extract</code>","text":"<p>Read all Excel files.</p> <p>Read all Excel files in a given directory and return a list of DataFrames.</p> <p>Parameters:</p> Name Type Description Default <code>input_path</code> <code>str</code> <p>The path to the directory containing Excel files.</p> required"},{"location":"getting-started/extract/#etlproject.pipeline.extract.extract_dataframes_from_excel--returns","title":"Returns","text":"<pre><code>List[pd.DataFrame]: A list of DataFrames, each representing an Excel file.\n</code></pre> Source code in <code>etlproject/pipeline/extract.py</code> <pre><code>def extract_dataframes_from_excel(input_path: str) -&gt; List[pd.DataFrame]:\n    \"\"\"Read all Excel files.\n\n    Read all Excel files in a given directory and return a list of DataFrames.\n\n    Args:\n        input_path (str): The path to the directory containing Excel files.\n\n    Returns\n    -------\n        List[pd.DataFrame]: A list of DataFrames, each representing an Excel file.\n\n    \"\"\"\n    # Constr\u00f3i o caminho de busca e encontra todos os arquivos Excel no diret\u00f3rio.\n    excel_files = glob.glob(os.path.join(input_path, \"*.xlsx\"))\n    # Usa compreens\u00e3o de lista para ler cada arquivo Excel e colet\u00e1-los em uma lista.\n    try:\n        data_frames = [pd.read_excel(file) for file in excel_files]\n    except Exception as e:\n        # Tratamento de exce\u00e7\u00f5es para lidar com erros ao ler os arquivos Excel.\n        print(f\"An error occurred: {e}\")\n        data_frames = []\n\n    return data_frames\n</code></pre>"},{"location":"getting-started/load/","title":"Load","text":"<p>Abaixo, voc\u00ea encontrar\u00e1 detalhes sobre as fun\u00e7\u00f5es e m\u00f3dulos do nosso projeto.</p>"},{"location":"getting-started/load/#modulo-consolidador","title":"M\u00f3dulo <code>consolidador</code>","text":""},{"location":"getting-started/load/#load_1","title":"<code>load</code>","text":"<pre><code>def load(df: pd.DataFrame, output_folder: str, filename: str) -&gt; None:\n    \"\"\"\n    Fun\u00e7\u00e3o para carregar (ou salvar) um DataFrame em um arquivo Excel.\n\n    Args:\n        df (pd.DataFrame): DataFrame a ser salvo.\n        output_folder (str): Diret\u00f3rio onde o arquivo ser\u00e1 salvo.\n        filename (str): Nome do arquivo Excel.\n\n    Returns:\n        None\n    \"\"\"\n</code></pre>"},{"location":"getting-started/load/#consolidate_excels","title":"<code>consolidate_excels</code>","text":"<p>```python def consolidate_excels(input_folder: str, output_folder: str, filename: str) -&gt; None:     \"\"\"     Fun\u00e7\u00e3o para consolidar m\u00faltiplos arquivos Excel em um \u00fanico arquivo.</p> <pre><code>Args:\n    input_folder (str): Pasta contendo arquivos Excel.\n    output_folder (str): Pasta onde o arquivo consolidado ser\u00e1 salvo.\n    filename (str): Nome do arquivo Excel consolidado.\n\nReturns:\n    None\n\"\"\"\n</code></pre>"},{"location":"getting-started/transform/","title":"Transform","text":"<p>Abaixo, voc\u00ea encontrar\u00e1 detalhes sobre as fun\u00e7\u00f5es e m\u00f3dulos do nosso projeto.</p>"},{"location":"getting-started/transform/#modulo-consolidador","title":"M\u00f3dulo <code>consolidador</code>","text":""},{"location":"getting-started/transform/#transform_1","title":"<code>transform</code>","text":"<pre><code>def transform(data: list) -&gt; pd.DataFrame:\n    \"\"\"\n    Fun\u00e7\u00e3o para transformar uma lista de DataFrames em um \u00fanico DataFrame consolidado.\n\n    Args:\n        data (list): Lista contendo DataFrames para consolida\u00e7\u00e3o.\n\n    Returns:\n        DataFrame: DataFrame consolidado.\n    \"\"\"\n</code></pre>"}]}